{"ast":null,"code":"import axios from 'axios';\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'https://custom-web-backend.onrender.com',\n  timeout: 15000,\n  // Increased timeout to 15 seconds\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for performance optimization\ninstance.interceptors.request.use(config => {\n  // Add timestamp for caching\n  config.metadata = {\n    startTime: new Date()\n  };\n\n  // Add auth token if available\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for performance monitoring and error handling\ninstance.interceptors.response.use(response => {\n  var _response$config$meta;\n  // Log response time for performance monitoring\n  const endTime = new Date();\n  const startTime = (_response$config$meta = response.config.metadata) === null || _response$config$meta === void 0 ? void 0 : _response$config$meta.startTime;\n  if (startTime) {\n    const duration = endTime.getTime() - startTime.getTime();\n    console.log(`API call to ${response.config.url} took ${duration}ms`);\n  }\n  return response;\n}, async error => {\n  // Retry logic for network errors\n  if (error.code === 'ECONNABORTED' || error.message.includes('timeout')) {\n    console.log('Request timeout, retrying...');\n    // You can implement retry logic here if needed\n  }\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"names":["axios","instance","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","metadata","startTime","Date","token","localStorage","getItem","Authorization","error","Promise","reject","response","_response$config$meta","endTime","duration","getTime","console","log","url","code","message","includes"],"sources":["D:/WORKING WEBSITES/CUSTM WEB/frontend/src/axios.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'https://custom-web-backend.onrender.com',\r\n  timeout: 15000, // Increased timeout to 15 seconds\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor for performance optimization\r\ninstance.interceptors.request.use(\r\n  (config) => {\r\n    // Add timestamp for caching\r\n    config.metadata = { startTime: new Date() };\r\n    \r\n    // Add auth token if available\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    \r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for performance monitoring and error handling\r\ninstance.interceptors.response.use(\r\n  (response) => {\r\n    // Log response time for performance monitoring\r\n    const endTime = new Date();\r\n    const startTime = response.config.metadata?.startTime;\r\n    if (startTime) {\r\n      const duration = endTime.getTime() - startTime.getTime();\r\n      console.log(`API call to ${response.config.url} took ${duration}ms`);\r\n    }\r\n    \r\n    return response;\r\n  },\r\n  async (error) => {\r\n    // Retry logic for network errors\r\n    if (error.code === 'ECONNABORTED' || error.message.includes('timeout')) {\r\n      console.log('Request timeout, retrying...');\r\n      // You can implement retry logic here if needed\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC5BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,yCAAyC;EACnFC,OAAO,EAAE,KAAK;EAAE;EAChBC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAP,QAAQ,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAK;EACV;EACAA,MAAM,CAACC,QAAQ,GAAG;IAAEC,SAAS,EAAE,IAAIC,IAAI,CAAC;EAAE,CAAC;;EAE3C;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTJ,MAAM,CAACJ,OAAO,CAACW,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EAEA,OAAOJ,MAAM;AACf,CAAC,EACAQ,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAnB,QAAQ,CAACQ,YAAY,CAACc,QAAQ,CAACZ,GAAG,CAC/BY,QAAQ,IAAK;EAAA,IAAAC,qBAAA;EACZ;EACA,MAAMC,OAAO,GAAG,IAAIV,IAAI,CAAC,CAAC;EAC1B,MAAMD,SAAS,IAAAU,qBAAA,GAAGD,QAAQ,CAACX,MAAM,CAACC,QAAQ,cAAAW,qBAAA,uBAAxBA,qBAAA,CAA0BV,SAAS;EACrD,IAAIA,SAAS,EAAE;IACb,MAAMY,QAAQ,GAAGD,OAAO,CAACE,OAAO,CAAC,CAAC,GAAGb,SAAS,CAACa,OAAO,CAAC,CAAC;IACxDC,OAAO,CAACC,GAAG,CAAC,eAAeN,QAAQ,CAACX,MAAM,CAACkB,GAAG,SAASJ,QAAQ,IAAI,CAAC;EACtE;EAEA,OAAOH,QAAQ;AACjB,CAAC,EACD,MAAOH,KAAK,IAAK;EACf;EACA,IAAIA,KAAK,CAACW,IAAI,KAAK,cAAc,IAAIX,KAAK,CAACY,OAAO,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAE;IACtEL,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC3C;EACF;EAEA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAenB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}